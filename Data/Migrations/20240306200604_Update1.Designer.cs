// <auto-generated />
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(UniversityDbContext))]
    [Migration("20240306200604_Update1")]
    partial class Update1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.Context.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("City");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Москва"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Санкт-Петербург"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Новосибирск"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Екатеринбург"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Нижний Новгород"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Казань"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Челябинск"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Омск"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Самара"
                        },
                        new
                        {
                            Id = 10,
                            IsDeleted = false,
                            Name = "Ростов-на-Дону"
                        },
                        new
                        {
                            Id = 11,
                            IsDeleted = false,
                            Name = "Уфа"
                        },
                        new
                        {
                            Id = 12,
                            IsDeleted = false,
                            Name = "Красноярск"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "Воронеж"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Пермь"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Волгоград"
                        },
                        new
                        {
                            Id = 16,
                            IsDeleted = false,
                            Name = "Краснодар"
                        },
                        new
                        {
                            Id = 17,
                            IsDeleted = false,
                            Name = "Саратов"
                        },
                        new
                        {
                            Id = 18,
                            IsDeleted = false,
                            Name = "Тюмень"
                        },
                        new
                        {
                            Id = 19,
                            IsDeleted = false,
                            Name = "Тольятти"
                        },
                        new
                        {
                            Id = 20,
                            IsDeleted = false,
                            Name = "Ижевск"
                        });
                });

            modelBuilder.Entity("Data.Context.Discipline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Discipline");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Математика (профильный уровень)"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Физика"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Химия"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "История"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Обществознание"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Информатика"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Биология"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "География"
                        },
                        new
                        {
                            Id = 9,
                            IsDeleted = false,
                            Name = "Иностранный язык"
                        },
                        new
                        {
                            Id = 13,
                            IsDeleted = false,
                            Name = "Литература"
                        },
                        new
                        {
                            Id = 14,
                            IsDeleted = false,
                            Name = "Математика (базовый уровень)"
                        },
                        new
                        {
                            Id = 15,
                            IsDeleted = false,
                            Name = "Русский язык"
                        });
                });

            modelBuilder.Entity("Data.Context.DisciplineEducationProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int")
                        .HasColumnName("DisciplineId");

                    b.Property<int>("EducationProgramId")
                        .HasColumnType("int")
                        .HasColumnName("EducationProgramId");

                    b.HasKey("Id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("EducationProgramId");

                    b.ToTable("DisciplineEducationProgram");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisciplineId = 1,
                            EducationProgramId = 2
                        },
                        new
                        {
                            Id = 2,
                            DisciplineId = 15,
                            EducationProgramId = 2
                        },
                        new
                        {
                            Id = 3,
                            DisciplineId = 6,
                            EducationProgramId = 2
                        },
                        new
                        {
                            Id = 4,
                            DisciplineId = 1,
                            EducationProgramId = 8
                        },
                        new
                        {
                            Id = 5,
                            DisciplineId = 15,
                            EducationProgramId = 8
                        },
                        new
                        {
                            Id = 6,
                            DisciplineId = 6,
                            EducationProgramId = 8
                        },
                        new
                        {
                            Id = 7,
                            DisciplineId = 1,
                            EducationProgramId = 30
                        },
                        new
                        {
                            Id = 8,
                            DisciplineId = 15,
                            EducationProgramId = 30
                        },
                        new
                        {
                            Id = 9,
                            DisciplineId = 6,
                            EducationProgramId = 30
                        });
                });

            modelBuilder.Entity("Data.Context.EducationalOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Address");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("CityId");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<int>("TypeId")
                        .HasColumnType("int")
                        .HasColumnName("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("TypeId");

                    b.ToTable("EducationalOrganization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "ул. Ленинские Горы, 1",
                            CityId = 1,
                            Description = "Сегодня Московский университет — крупнейший классический университет России, в котором обучается более 45 тысяч человек из всех регионов страны (на разных формах обучения). В МГУ 40 факультетов (за последние 20 лет создан 21 факультет), 15 научно-исследовательских институтов, около 750 кафедр, отделов и лабораторий, Медицинский научно-образовательный центр, Научная библиотека, 4 музея, Ботанический сад, Научный парк, филиалы в Севастополе, Ташкенте, Астане, Баку, Душанбе, Ереване. \r\n\r\nМГУ осуществляет обучение по собственным образовательным уникальным 6‑летним образовательным стандартам, реализуемым в двух формах: интегрированная магистратура (нормативный срок обучения 4 года в бакалавриате и 2 года в магистратуре) и специалитет (нормативный срок обучения 6 лет). Особенностью интегрированной магистратуры является непрерывная подготовка студентов (на протяжении 6 лет обучения) по выбранному направлению, что является гарантией качественной подготовки специалистов в избранной области. В условиях перехода страны на двухуровневую систему высшего образования план приема в бюджетную магистратуру МГУ позволяет продолжить обучение в магистратуре всех выпускников МГУ (бакалавров), способных и готовых к дальнейшему обучению.",
                            Image = "msu.jpg",
                            IsDeleted = false,
                            Name = "Московский государственный университет им. М.В. Ломоносова",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 2,
                            Address = "Институтский пер., д. 9",
                            CityId = 1,
                            Description = "Московский физико-технический институт (МФТИ) является ведущим техническим университетом России. Система образования сфокусирована на глубоком изучении фундаментальных наук в сочетании с активным участием студентов в исследованиях в крупнейших российских и международных научных центрах. В МФТИ используется уникальная «Система Физтеха», разработанная основателями института и его первыми профессорами Петром Капицей, Николаем Семеновым и Львом Ландау. МФТИ имеет статус Государственного университета, что позволяет получать регулярную прямую финансовую и организационную поддержку от Правительства Российской Федерации. Институт является участником программы 5–100, направленной на развитие исследовательской деятельности, организованной в самом МФТИ, а также выход Физтеха в верхние позиции мировых университетских рейтингов.",
                            Image = "mfti.jpg",
                            IsDeleted = false,
                            Name = "Московский физико-технический институт",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "Каширское ш., д. 31",
                            CityId = 1,
                            Description = "«Мекка» физиков-ядерщиков, базовый вуз атомной промышленности России располагает рядом высокотехничных установок, в том числе, исследовательским ядерным реактором. Также, МИФИ занимает лидирующие позиции по подготовке программистов и специалистов по информационной безопасности. Здесь активно используется компьютерная поддержка учебного процесса: электронные учебники, компьютерные лабораторные работы, тренажеры. Университет сотрудничает с несколькими десятками университетов по всему миру. Многие старшекурсники проходят обучение и стажировку в лучших ядерных центрах Германии, США",
                            Image = "mifi.jpg",
                            IsDeleted = false,
                            Name = "Национальный исследовательский ядерный университет «МИФИ»",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            Address = "2-я Бауманская ул., д. 5, стр. 1",
                            CityId = 1,
                            Description = "МГТУ им. Н.Э. Баумана является одним из ведущих технических вузов страны. Университет ведет подготовку инженеров с 1830 года. На сегодняшний день в университете обучают по большому количеству направлений. Выпускники МГТУ становятся очень востребованными у работодателей на рынке труда. Ключевой особенностью обучения является сочетание теоретических и практических знаний. Университет занимается научными исследованиями и разработками.",
                            Image = "bauman.jpg",
                            IsDeleted = false,
                            Name = "Московский государственный технический университет им. Н.Э. Баумана",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Address = "ул. Маршала Тимошенко, д. 19",
                            CityId = 1,
                            Description = "Медицинский колледж имеет богатый опыт профессиональной подготовки квалифицированных кадров среднего звена, их переподготовки и усовершенствования, вносит существенный вклад в обеспечение лечебно-диагностической работы учреждений здравоохранения Управления делами Президента РФ.",
                            Image = "prez.jpg",
                            IsDeleted = false,
                            Name = "Медицинский колледж Управления делами Президента Российской Федерации",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Address = "Хибинский проезд, дом 10",
                            CityId = 1,
                            Description = "ГБПОУ КСТ имеет 4 обустроенных актовых зала в каждом подразделении для обучающихся, в том числе инвалидов и лиц с ограниченными возможностями здоровья, которые оснащены проекторами, звуковой аппаратурой. В 6 отдельно оборудованных кабинетах для занятий дополнительным образованием (обработка керамики, работы по дереву и др.) обучающиеся в том числе инвалидов и лиц с ограниченными возможностями здоровья занимаются научно-техническим и художественно-прикладным творчеством. В литературно-музыкальной гостиной в Учебном корпусе № 3 «Ярославский»  (Хибинский проезд, дом 10) проводятся тематические встречи с интересными людьми, литературные вечера, заседания студенческого самоуправления и женского клуба и другие мероприятия. ГБПОУ КСТ располагает широким спектром персональных компьютеров и информационного оборудования, которое в первую очередь используется в учебном и воспитательном процессах",
                            Image = "kst.png",
                            IsDeleted = false,
                            Name = "Колледж современных технологий имени Героя Советского Союза М.Ф. Панова",
                            TypeId = 1
                        });
                });

            modelBuilder.Entity("Data.Context.EducationalOrganizationContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EducationalOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("EducationalOrganizationId");

                    b.Property<int>("TypeContactId")
                        .HasColumnType("int")
                        .HasColumnName("TypeContactId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.HasIndex("EducationalOrganizationId");

                    b.HasIndex("TypeContactId");

                    b.ToTable("EducationalOrganizationContact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EducationalOrganizationId = 3,
                            TypeContactId = 1,
                            Value = "rector@mephi.ru"
                        },
                        new
                        {
                            Id = 2,
                            EducationalOrganizationId = 3,
                            TypeContactId = 2,
                            Value = "(499) 324-84-17"
                        },
                        new
                        {
                            Id = 3,
                            EducationalOrganizationId = 3,
                            TypeContactId = 2,
                            Value = "(495) 785-55-25"
                        },
                        new
                        {
                            Id = 4,
                            EducationalOrganizationId = 4,
                            TypeContactId = 2,
                            Value = "(499) 263-63-91"
                        },
                        new
                        {
                            Id = 5,
                            EducationalOrganizationId = 4,
                            TypeContactId = 1,
                            Value = "bauman@bmstu.ru"
                        });
                });

            modelBuilder.Entity("Data.Context.EducationLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("EducationLevel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Профессия"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Специальность"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Бакалавриат"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Специалитет"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Магистратура"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Аспирантура"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Докторантура"
                        });
                });

            modelBuilder.Entity("Data.Context.EducationProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("EducationalOrganizationSpecializationId")
                        .HasColumnType("int")
                        .HasColumnName("SpecializationId");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Image");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("EducationalOrganizationSpecializationId");

                    b.ToTable("EducationProgram");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "mahmat.png",
                            Name = "01.05.01 Фундаментальные математика и механика"
                        },
                        new
                        {
                            Id = 2,
                            EducationalOrganizationSpecializationId = 1,
                            Image = "prinfo.png",
                            Name = "09.03.01 Прикладная информатика"
                        },
                        new
                        {
                            Id = 3,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it.png",
                            Name = "09.03.02 Информационные системы и технологии"
                        },
                        new
                        {
                            Id = 4,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "ite.png",
                            Name = "09.03.03 Прикладная информатика в экономике"
                        },
                        new
                        {
                            Id = 5,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "iteng.png",
                            Name = "09.03.04 Программная инженерия"
                        },
                        new
                        {
                            Id = 6,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "itec.png",
                            Name = "09.03.05 Информационные системы и технологии (в экономике)"
                        },
                        new
                        {
                            Id = 7,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it2.png",
                            Name = "09.03.06 Программирование"
                        },
                        new
                        {
                            Id = 8,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it3.png",
                            Name = "09.03.07 Веб-технологии"
                        },
                        new
                        {
                            Id = 9,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it4.png",
                            Name = "09.03.08 Математическое обеспечение и администрирование информационных систем"
                        },
                        new
                        {
                            Id = 10,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it5.png",
                            Name = "09.03.09 Информационные системы и технологии (в здравоохранении)"
                        },
                        new
                        {
                            Id = 11,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it6.png",
                            Name = "09.03.10 Информационные системы и технологии (в бизнесе)"
                        },
                        new
                        {
                            Id = 12,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it7.png",
                            Name = "09.03.11 Информационная безопасность"
                        },
                        new
                        {
                            Id = 13,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it8.png",
                            Name = "09.03.12 Информационные технологии в юриспруденции"
                        },
                        new
                        {
                            Id = 14,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it9.png",
                            Name = "09.03.13 Наноинженерия"
                        },
                        new
                        {
                            Id = 15,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it11.png",
                            Name = "09.03.14 Антикризисное управление"
                        },
                        new
                        {
                            Id = 16,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it12.png",
                            Name = "09.03.15 Управление инновациями"
                        },
                        new
                        {
                            Id = 17,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it13.png",
                            Name = "09.03.16 Информатика и вычислительная техника"
                        },
                        new
                        {
                            Id = 18,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it14.png",
                            Name = "09.03.17 Интеллектуальные системы и технологии"
                        },
                        new
                        {
                            Id = 19,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it15.png",
                            Name = "09.03.18 Технологии управления организацией"
                        },
                        new
                        {
                            Id = 20,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it16.png",
                            Name = "09.03.19 Программное обеспечение экономической деятельности"
                        },
                        new
                        {
                            Id = 21,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it17.png",
                            Name = "09.03.20 Программное обеспечение информационных технологий"
                        },
                        new
                        {
                            Id = 22,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it18.png",
                            Name = "09.03.21 Программно-аппаратные комплексы защиты информации"
                        },
                        new
                        {
                            Id = 23,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it19.png",
                            Name = "09.03.22 Компьютерное моделирование и комплексная автоматизация проектирования"
                        },
                        new
                        {
                            Id = 24,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it20.png",
                            Name = "09.03.23 Прикладное программирование"
                        },
                        new
                        {
                            Id = 25,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it21.png",
                            Name = "09.03.24 Программирование в интеллектуальных робототехнических системах"
                        },
                        new
                        {
                            Id = 26,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it22.png",
                            Name = "09.03.25 Киберфизические системы"
                        },
                        new
                        {
                            Id = 27,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it23.png",
                            Name = "09.03.26 Технологии промышленного программирования"
                        },
                        new
                        {
                            Id = 28,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it24.png",
                            Name = "09.03.27 Технологии программирования систем и сетей"
                        },
                        new
                        {
                            Id = 29,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it25.png",
                            Name = "09.03.28 Информационные системы"
                        },
                        new
                        {
                            Id = 30,
                            EducationalOrganizationSpecializationId = 2,
                            Image = "it10.png",
                            Name = "09.02.07 Информационные системы и программирование"
                        });
                });

            modelBuilder.Entity("Data.Context.PassingScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsBudget")
                        .HasColumnType("bit")
                        .HasColumnName("IsBudget");

                    b.Property<int>("ProgramEducationalOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("ProgramEducationalOrganizationId");

                    b.Property<double>("Score")
                        .HasColumnType("float")
                        .HasColumnName("Score");

                    b.Property<short>("Year")
                        .HasColumnType("smallint")
                        .HasColumnName("Year");

                    b.HasKey("Id");

                    b.HasIndex("ProgramEducationalOrganizationId");

                    b.ToTable("PassingScore");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsBudget = true,
                            ProgramEducationalOrganizationId = 1,
                            Score = 290.0,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 2,
                            IsBudget = false,
                            ProgramEducationalOrganizationId = 1,
                            Score = 180.0,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 3,
                            IsBudget = false,
                            ProgramEducationalOrganizationId = 6,
                            Score = 192.0,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 4,
                            IsBudget = true,
                            ProgramEducationalOrganizationId = 6,
                            Score = 295.0,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 5,
                            IsBudget = true,
                            ProgramEducationalOrganizationId = 5,
                            Score = 4.5999999999999996,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 6,
                            IsBudget = true,
                            ProgramEducationalOrganizationId = 4,
                            Score = 4.2999999999999998,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 7,
                            IsBudget = false,
                            ProgramEducationalOrganizationId = 5,
                            Score = 4.0999999999999996,
                            Year = (short)2023
                        },
                        new
                        {
                            Id = 8,
                            IsBudget = false,
                            ProgramEducationalOrganizationId = 4,
                            Score = 3.7999999999999998,
                            Year = (short)2023
                        });
                });

            modelBuilder.Entity("Data.Context.ProgramEducationalOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("Duration");

                    b.Property<int>("EducationLevel")
                        .HasColumnType("int")
                        .HasColumnName("EducationLevelId");

                    b.Property<int>("EducationProgramId")
                        .HasColumnType("int")
                        .HasColumnName("EducationProgramId");

                    b.Property<int>("EducationalOrganizationId")
                        .HasColumnType("int")
                        .HasColumnName("EducationalOrganizationId");

                    b.Property<decimal>("TuitionPerYear")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("TuitionPerYear");

                    b.HasKey("Id");

                    b.HasIndex("EducationLevel");

                    b.HasIndex("EducationProgramId");

                    b.HasIndex("EducationalOrganizationId");

                    b.ToTable("ProgramEducationalOrganization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Вы освоите программирование, научитесь разрабатывать и обслуживать программное обеспечение, проектировать и сопровождать информационные системы, анализировать данные и обучать нейронные сети, создавать AI-инструменты. ",
                            Duration = 4,
                            EducationLevel = 3,
                            EducationProgramId = 30,
                            EducationalOrganizationId = 1,
                            TuitionPerYear = 390000m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Сфера связи, информационных и коммуникационных технологий — одна из самых перспективных областей. Тот, кто владеет информационными технологиями, владеет будущим. Разработчики программного обеспечения (ПО) создают и внедряют различные информационные системы на предприятия, адаптируют их под конкретные бизнес-задачи, обеспечивают стабильную работу информационно-технической инфраструктуры и сервисов компании. ",
                            Duration = 5,
                            EducationLevel = 4,
                            EducationProgramId = 30,
                            EducationalOrganizationId = 1,
                            TuitionPerYear = 390000m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Специальность охватывает достаточно широкий спектр сфер профессиональной деятельности, что позволяет получить знания о безопасности информационных систем, техническом обслуживании и ремонте компьютеров, администрировании сетей, прикладном и системном программировании, WEB-дизайне и графическом моделировании объектов. Позволяет получить опыт в разработке и интеграции модулей программного обеспечения, администрировании баз данных, сопровождении программного обеспечения.",
                            Duration = 2,
                            EducationLevel = 5,
                            EducationProgramId = 30,
                            EducationalOrganizationId = 1,
                            TuitionPerYear = 430000m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Специалист занимается разработкой, созданием и обслуживанием информационных систем (обслуживание серверной системы, верстка сайтов, администрирование базы данных коммерческих и бюджетных учреждений, программирование, защита информации и др.)",
                            Duration = 4,
                            EducationLevel = 1,
                            EducationProgramId = 30,
                            EducationalOrganizationId = 6,
                            TuitionPerYear = 140000m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Специалист занимается разработкой, созданием и обслуживанием информационных систем (обслуживание серверной системы, верстка сайтов, администрирование базы данных коммерческих и бюджетных учреждений, программирование, защита информации и др.)",
                            Duration = 3,
                            EducationLevel = 2,
                            EducationProgramId = 30,
                            EducationalOrganizationId = 6,
                            TuitionPerYear = 150000m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Вы освоите программирование, научитесь разрабатывать и обслуживать программное обеспечение, проектировать и сопровождать информационные системы, анализировать данные и обучать нейронные сети, создавать AI-инструменты. ",
                            Duration = 4,
                            EducationLevel = 3,
                            EducationProgramId = 30,
                            EducationalOrganizationId = 1,
                            TuitionPerYear = 350000m
                        });
                });

            modelBuilder.Entity("Data.Context.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Specialization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Информатика и вычислительная техника"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Математика и механика"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Компьютерные и информационные науки"
                        },
                        new
                        {
                            Id = 4,
                            IsDeleted = false,
                            Name = "Физика и астрономия"
                        },
                        new
                        {
                            Id = 5,
                            IsDeleted = false,
                            Name = "Химия"
                        },
                        new
                        {
                            Id = 6,
                            IsDeleted = false,
                            Name = "Науки о Земле"
                        },
                        new
                        {
                            Id = 7,
                            IsDeleted = false,
                            Name = "Биологические науки"
                        },
                        new
                        {
                            Id = 8,
                            IsDeleted = false,
                            Name = "Архитектура"
                        });
                });

            modelBuilder.Entity("Data.Context.TypeContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("TypeContact");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Телефон"
                        },
                        new
                        {
                            Id = 3,
                            IsDeleted = false,
                            Name = "Сайт"
                        });
                });

            modelBuilder.Entity("Data.Context.TypeEducationalOrganization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("TypeEducationalOrganization");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDeleted = false,
                            Name = "Профессиональная образовательная организация"
                        },
                        new
                        {
                            Id = 2,
                            IsDeleted = false,
                            Name = "Образовательная организация высшего образования"
                        });
                });

            modelBuilder.Entity("Data.Context.DisciplineEducationProgram", b =>
                {
                    b.HasOne("Data.Context.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Context.EducationProgram", "EducationProgram")
                        .WithMany()
                        .HasForeignKey("EducationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discipline");

                    b.Navigation("EducationProgram");
                });

            modelBuilder.Entity("Data.Context.EducationalOrganization", b =>
                {
                    b.HasOne("Data.Context.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Context.TypeEducationalOrganization", "TypeEducationalOrganization")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("TypeEducationalOrganization");
                });

            modelBuilder.Entity("Data.Context.EducationalOrganizationContact", b =>
                {
                    b.HasOne("Data.Context.EducationalOrganization", "EducationalOrganization")
                        .WithMany()
                        .HasForeignKey("EducationalOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Context.TypeContact", "TypeContact")
                        .WithMany()
                        .HasForeignKey("TypeContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationalOrganization");

                    b.Navigation("TypeContact");
                });

            modelBuilder.Entity("Data.Context.EducationProgram", b =>
                {
                    b.HasOne("Data.Context.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("EducationalOrganizationSpecializationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Data.Context.PassingScore", b =>
                {
                    b.HasOne("Data.Context.ProgramEducationalOrganization", "ProgramEducationalOrganization")
                        .WithMany()
                        .HasForeignKey("ProgramEducationalOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramEducationalOrganization");
                });

            modelBuilder.Entity("Data.Context.ProgramEducationalOrganization", b =>
                {
                    b.HasOne("Data.Context.EducationLevel", "Level")
                        .WithMany()
                        .HasForeignKey("EducationLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Context.EducationProgram", "EducationProgram")
                        .WithMany()
                        .HasForeignKey("EducationProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Context.EducationalOrganization", "EducationalOrganization")
                        .WithMany()
                        .HasForeignKey("EducationalOrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EducationProgram");

                    b.Navigation("EducationalOrganization");

                    b.Navigation("Level");
                });
#pragma warning restore 612, 618
        }
    }
}
